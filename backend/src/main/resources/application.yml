spring:
  config:
    import: optional:file:.env[.properties]
  application:
    name: back
  profiles:
    active: dev
  output:
    ansi:
      enabled: always
  datasource:
    url: jdbc:h2:./db_dev;MODE=PostgreSQL
    username: sa
    password:
    driver-class-name: org.h2.Driver
    hikari:
      auto-commit: false

  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        use_sql_comments: true
        format_sql: true
        highlight_sql: true

  security:
    oauth2:
      client:
        registration:
          kakao:
            client-id: ${SPRING__SECURITY__OAUTH2__CLIENT__REGISTRATION__KAKAO__CLIENT_ID}
            client-secret: ${SPRING__SECURITY__OAUTH2__CLIENT__REGISTRATION__KAKAO__CLIENT_SECRET}
            client-name: Kakao
            scope: profile_nickname, account_email
          naver :
            client-id: ${SPRING__SECURITY__OAUTH2__CLIENT__REGISTRATION__NAVER__CLIENT_ID}
            client-secret: ${SPRING__SECURITY__OAUTH2__CLIENT__REGISTRATION__NAVER__CLIENT_SECRET}
            client-name: Naver
            scope: profile, email
      provider:
        kakao:
          authorization-uri: https://kauth.kakao.com/oauth/authorize
          token-uri: https://kauth.kakao.com/oauth/token
          user-info-uri: https://kapi.kakao.com/v2/user/me
          user-name-attribute: id
        naver:
          authorization-uri: https://nid.naver.com/oauth2.0/authorize
          token-uri: https://nid.naver.com/oauth2.0/token
          user-info-uri: https://openapi.naver.com/v1/nid/me
          user-name-attribute: response

springdoc:
  default-produces-media-type: application/json;charset=UTF-8

logging:
  level:
    org.hibernate.orm.jdbc.bind: TRACE
    org.hibernate.orm.jdbc.extract: TRACE
    org.springframework.transaction.interceptor: TRACE

custom:
  jwt:
    secretKey: ${CUSTOM__JWT__SECRET_KEY}
    accessToken:
      expirationSeconds: 3600